aliases:
  - &restore-yarn-cache
    keys:
      - v1-yarn-{{ .Branch }}-{{ checksum "website/yarn.lock" }}
      # Fallback in case checksum fails
      - v1-yarn-{{ .Branch }}-

  - &save-yarn-cache
    paths:
      - website/node_modules
      - ~/.cache/yarn
    key: v1-yarn-{{ .Branch }}-{{ checksum "website/yarn.lock" }}

  - &filter-only-master
    branches:
      only:
        - master
  
defaults: &defaults
  working_directory: ~/react-native-website
  docker:
    - image: circleci/node:8

version: 2
jobs:
  # Checkout and install dependencies
  checkout_deps:
    <<: *defaults
    steps:
      - checkout
      - run: *restore-yarn-cache
      - run:
          name: Install Dependencies
          command: |
            cd website
            yarn --no-progress
            sudo apt install rsync
      - run: *save-yarn-cache
      - persist_to_workspace:
          root: .
          paths: .

  # Tests website
  test_website:
    <<: *defaults
    working_directory: ~/react-native-website/website
    steps:
      - attach_workspace:
          at: ~/react-native-website
      - run:
          name: Check Formatting with Prettier
          command: yarn ci-check
      - run:
          name: Test Website
          command: yarn test

  # Deploys website 
  deploy_website:
    <<: *defaults
    working_directory: ~/react-native-website/website
    steps:
      - attach_workspace:
          at: ~/react-native-website
      - run:
          name: Build and Deploy Static Website
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME == "facebook" && -z $CI_PULL_REQUEST && -z $CIRCLE_PR_USERNAME ]]; then
              git config --global user.email "reactjs-bot@users.noreply.github.com"
              git config --global user.name "Website Deployment Script"
              echo "machine github.com login reactjs-bot password $GITHUB_TOKEN" > ~/.netrc
              echo "Deploying website..."
              GIT_USER=reactjs-bot CIRCLE_PROJECT_REPONAME=react-native yarn run publish-gh-pages
            else
              echo "Skipping deploy."
            fi

workflows:
  version: 2

  # Tests run on master and on forks
  test:
    jobs:
      - checkout_deps

      # Test website
      - test_website:
        requires:
          - checkout_deps
    
  # If we are on master, deploy docs
  deploy:
    jobs:
      - checkout_deps:
          filters: *filter-only-master

      - deploy_website:
          requires:
            - checkout_deps
